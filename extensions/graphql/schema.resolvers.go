package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/xraph/forge"
	"github.com/xraph/forge/extensions/graphql/generated"
)

func (r *mutationResolver) Echo(ctx context.Context, message string) (string, error) {
	r.logger.Debug("echo mutation called", forge.F("message", message))
	return message, nil
}

func (r *queryResolver) Hello(ctx context.Context, name string) (string, error) {
	r.logger.Debug("hello query called", forge.F("name", name))
	return fmt.Sprintf("Hello, %s!", name), nil
}

func (r *queryResolver) Version(ctx context.Context) (string, error) {
	r.logger.Debug("version query called")
	return "2.0.0", nil
}

func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
